buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.guardsquare:proguard-gradle:7.6.0"
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
    id "io.github.intisy.online-gradle" version "1.7.2"
}

online {
    debug = true
    autoUpdate = true
    updateDelay = 3600
    presets = [
            "https://raw.githubusercontent.com/intisy/gradle-snippets/presets/default.preset:1.8",
            "https://raw.githubusercontent.com/intisy/gradle-snippets/presets/publish.preset"
    ]
}

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

configurations {
    compileOnly.setCanBeResolved(true)
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.17.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (JavaVersion.current().isJava10Compatible()) {
        options.release.set(8)
    }
}

task proguard(type: proguard.gradle.ProGuardTask) {
    enabled = false
    configuration 'proguard-rules.pro'

    injars  sourceSets.main.output
    outjars "$buildDir/libs/${project.name}-${project.version}-obf.jar"

    libraryjars(sourceSets.main.compileClasspath)
}

shadowJar {
    archiveClassifier.set('')
    dependencies {
        exclude(dependency('org.spigotmc:spigot-api'))
    }
}

build {
    dependsOn shadowJar
}

runServer {
    minecraftVersion '1.21.1'
    jvmArgs("-Dcom.mojang.eula.agree=true")
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
